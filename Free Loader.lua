-- This file was protected by Trip Hub Obfuscator v8 Elite

return(function()local NZ=string.char;local pB=string.gsub;local uC=string.sub;local bU=tonumber;local iE=getfenv();local CI=table.concat;local yD=345;local QE,mJ,Vl,Cw=select,1,nil,nil;if xC==0x000 then Q=Jf;l9=2;else if Qs==0X1 then P={[0]={[0X00000]=Af,0X1,2,Bf,4,ff,0X006,7,SN,0X09,10,0X000B,12,0X000d,14,hk},{[0]=1,0,3,2,5,4,7,6,0X00009,0X8,0Xb,10,0X00d,12,15,Vf},{[0]=2,3,0X00,0X1,6,0X7,4,5,av,0x000b,8,se,0XE,0xf,0Xc,0X00d},{[0]=0X3,2,1,0X0,bf,6,5,0x0004,'0449HD0461BE0461AB0457DH0460AH0403AE0392AE0392DH0461EB0459EA0450DH0457HH0449HB0462ED0443HH0391BB0448EH0442BA0392DE0450AA0455DE0463EB0450EA0461AB0446DE0392EE',0Xa,9,0x8,0Xf,0X000e,0xd,0xc},{[0]=4,5,6,7,0,'0415BA0459HE0446EE0446EH0377AD0428DE0446DH0465AE',0X002,0X3,12,0x000d,0X0E,0X0F,0X8,9,10,0xB},{[0]=ff,4,7,6,1,0,0X0003,2,Df,12,0X0000F,14,0X00009,Of,'0416EB0446BA0461AE0377AB0411BE0446EB0461DH0461AE0446HA0459AH',10},{[0]=6,7,4,0x5,2,3,0X000,0X001,14,0XF,0Xc,13,10,0X0b,8,nf},{[0X00]=0X7,6,5,jf,3,2,0X1,0,0Xf,14,0xd,0Xc,11,10,9,0x8},{[0]=8,'0433DE0463ED0450BA0445AE0446EA0456EB0460BH0408EE0377DE0455AH0442AB0449BD',0x0a,0xb,12,Df,14,Ef,0,1,0x2,3,0x4,5,0x006,7},{[0]=0X9,0x00008,0XB,10,0X0D,0XC,15,Vf,0X01,0x0000,0X003,vf,0X5,4,0X07,6},{[0X00000]=0xA,0xb,0X8,nf,14,15,'0415EE0459HA0446DH0446AD0377BA0425EB0456AH0459BD0455HB0377BA0417EA0446AD0459EE0446BE',13,0x2,0X003,0X0,0x0001,6,0x7,0X4,0X5},{[0]=11,bU,9,8,0X0000f,0XE,13,0X00C,3,0X2,0x0001,0,0X00007,ck,Go,0X4},{[0X0]=0X0000c,0x0D,0Xe,0X0000F,8,0X00009,0Xa,11,sZ,5,sy,0X7,0X0,0X001,0x2,0x3},{[0X0000]=Df,0X00c,0X000f,0Xe,nf,0X8,0XB,10,5,4,bf,6,1,0X0,3,Kg},{[0]=14,15,12,13,Ff,0xB,0X08,9,'0453HE0456EE0442ED0445DE0460EE0461DD0459HE0450AE0455ED0448HD0408DE',7,4,0x0005,2,3,0,1},{[0]=0X0F,14,0Xd,0XC,0XB,0Xa,9,0X00008,0X7,6,0X5,0x4,Bf,2,'0451DD0446BA0460HE0462BB0460BD0377EA0461AD0449EE0446EE0377AH0443AE0446HA0460HE0461DH',0}};l9=0X000;else I=mf;l9=0X3; end end;local function lG(c)local r={}for i=1,#c,6 do r[#r+1]=NZ(bU(uC(c,i,i+3))-yD)end return CI(r) end;e={[0]={[0X00000]=qj,0X1,2,ms,4,Hi,0X006,7,DC,0X09,10,0X000B,12,0X000d,14,EJ},{[0]=1,NW,3,2,HA,4,7,6,0X00009,0X8,0Xb,10,0X00d,12,15,lc},{[0]=2,3,0X00,0X1,6,0X7,4,5,0XA,0x000b,8,pZ,0XE,0xf,0Xc,0X00d},{[0]=0X3,2,1,0X0,um,6,5,0x0004,0X00B,0Xa,9,0x8,0Xf,0X000e,0xd,0xc},{[0]=4,5,6,7,0,0X001,0X002,0X3,12,0x000d,0X0E,0X0F,0X8,9,10,0xB},{[0]=ff,4,7,6,1,0,0X0003,2,Ez,12,0X0000F,14,0X00009,Of,'0428HE0449BE0450AA0461DB0377BE0457DE0446AD0455EE0450AA0460EH',10},{[0]=6,7,4,0x5,2,3,0X000,0X001,14,'0394AE0395AA0396BE0397BE0398EE0399DE0400HE0401HE0402EA',0Xc,13,10,0X0b,8,nf},{[0X00]=0X7,6,5,pG,3,2,0X1,0,0Xf,14,0xd,0Xc,11,10,9,0x8},{[0]=8,9,0x0a,0xb,12,cA,14,Gm,0,1,0x2,3,0x4,5,0x006,7},{[0]=0X9,0x00008,0XB,10,0X0D,0XC,15,Vf,0X01,'0450EE0454BD0442EE0448DE0450DB0455EH0446DE0377EH0443HB0462BH0466DA0450BB0455ED0448EB0377HE0453EA0462HE0459DE0442EA0457BH0449AA',0X003,vf,0X5,4,0X07,6},{[0X00000]=0xA,0xb,0X8,nf,14,15,0X00C,13,0x2,'0421DA0424EA0421AE0421HH0421ED0421BE0421DH0421AA0421BD0421ED0421BB0421HD0421BH',0X0,0x0001,6,0x7,0X4,0X5},{[0]=11,0Xa,9,8,0X0000f,0XE,13,0X00C,3,0X2,0x0001,0,0X00007,qL,vq,0X4},{[0X0]=0X0000c,0x0D,0Xe,0X0000F,8,0X00009,0Xa,11,FW,5,pj,0X7,0X0,0X001,0x2,0x3},{[0X0000]=Df,0X00c,'0429DH0459BB0450BH0457BE0377EB0417EE0462EH0443DE0377AE0461BB0449DE0446BH0377EA0443BD0446EB0460EE0461HD',0Xe,nf,0X8,0XB,10,5,4,XF,6,1,0X0,3,QB},{[0]=14,15,12,13,FG,ST,0X08,9,0X006,7,4,'0453HE0456HB0442EH0445EE0460DA0461HB0459EH0450BB0455EE0448DD0408ED0377BE0455HA0442EB0449ED',2,3,0,1},{[0]=0X0F,14,0Xd,0XC,0XB,0Xa,9,'0453AA0456EB0442AA0445AA0460EB0461AE0459AA0450HE0455BE0448AB0408DD0377HE0455EE0442AA0449DB',0X7,6,0X5,0x4,Bf,2,'0452DH0442AD0451EB0455AE0447BA0442EA0456HE0455DB0445EH0456EH0442EE0460BA',0}};local DI={0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,'0422HE0456HE0461AH0449ED0446AE0459HE0447EE0462HB0444ED0452DE0446BE0459AE',0x20,0x21,0x22,0x23,0x24,0x25,0x26,'0460AE0461AE0462DD0457DB0450HH0445ED',0x28,0x29,0x2A,0x2B,0x2C,0x2D,0x2E,'0449HH0461EE0461HH0457DH0460AA0403DE0392BE0392BE0461ED0459HD0450AA0457DE0449AH0462EE0443EH0391EB0448EE0442ED',0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,'0460DD0449EE0450DB0461BD',0x3F,0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,'0448HH0442EA0466BH',0x4B,0x4C,0x4D,0x4E,0x4F,0x50};local Tl={0x10,0x0C,0x03,0x1A,0x09,0x15,0x0C,0x10,0x03,0x09,0x0E,0x13,0x0B,0x0C,0x09,0x14,0x0A,0x04,0x0C,0x12,0x0C,0x1C,0x03,0x05,'0391BA0391AA0403AE0403EB0429BE0459DH0450HD0457BD0377EB0417ED0462HH0443HB0377AE0424DD0443HH0447AE0462EE0460EE0444AH0442EA0461BA0456AB0459AB0377BA0463AB0401DE0377BD0414DE0453HE0450EA0461AA0446ED0403EB0403DE0391EE0391BE',0x07,0x0C,0x05,0x06,0x09,0x0E,0x12,0x17,0x09,0x15,0x19,0x15,0x1B,0x05,0x0E,0x1A,0x12,0x0D,0x12,0x07,'0449DH0461EE0461HE0457BD0460AE0403BE0392ED0392AH0461HE0459DA0450EA0457EH0449AB0462AE0443EE0391EH0448DA0442HD',0x0C,0x1B,0x15};local gB=('..::Trip Hub Obfuscator v8 Elite::..0448EE0446EB0461BE0448EB0446AE0455BA0463BB0385DE0386DE0391EB0429EE0459EE0450EH0457EH0440DE0417EA0462HE0443EH0440EB0415AE0459AE0446EE0446BA0440BH0421DD0456HE0442DE0445EH0446DB0459BH0377EE0406BA0377DE0461AE0459BE0462HH0446HE0355DA0453DE0456BE0444EB0442EH0453HE0377AB0415HB0459DE0446HE0446ED0415BE0456HA0453HD0445EH0446ED0459EB0377DH0406EE0377DH0379EH0449ED0461AE0461DB0457AE0460EE0403AE0392AH0392BH0459AB0442HB0464BE0391DB0448HE0450EE0461DD0449AE0462AA0443AA0462AE0460ED0446BE0459BE0444BE0456EE0455EA0461ED0446HA0455AE0461EE0391ED0444AA0456HA0454DE0392EB0446BD0453EH0465AA0456BB0444AE0442BE0460DB0433BD0413AB0392AB0429EE0459EA0450BB0457HD0390EA0417EA0462HD0443HE0392HE0454BE0442DD0450DE0455DA0392DB0415HH0459BH0446BH0446EE0392EE0379DB0355DD0453EE0456HD0442ED0445AD0460HA0461HE0459HE0450DE0455AE0448HE0385EE0448AE0442HH0454EH0446ED0403DD0417EE0461AA0461AA0457BA0416BB0446DE0461BD0385HA0379ED0449HH0461EB0461EB0457EH0460AE0403AE0392HD0392EE0459DA0442DH0464BE0391DH0448BD0450AE0461EA0449ED0462BB0443BE0462DD0460BE0446BH0459BA0444EB0456BE0455HE0461DE0446EB0455HH0461DE0391EE0444HD0456AE0454BE0392DA0446DA0453ED0465BA0456AE0444BA0442DE0460AB0433BE0413DE0392AB0429DE0459HB0450EE0457DH0390BH0417BB0462EH0443AA0392HD0454BD0442AE0450DE0455EE0392EE0428EA0444DA0459EE0450BE0457HE0461HE0460EE0392BH0432EH0446DB0443HH0449HE0456EA0456EE0452DE0391EE0453ED0462BE0442BE0379AA0386DA0386BH0385EH0386AA0355EH0355BE0450AH0447HE0377DD0448BE0442DA0454BB0446BD0391HA0425HE0453HB0442AH0444ED0446AD0418ED0445BE0377EA0406AD0406AE0377DE0398BD0399DA0393EE0395EB0393AH0398AE0398HA0396DA0402HH0397HD0377AB0461HH0449EA0446AE0455AH0355ED0377AE0377DE0377DH0377DA0453BE0456HB0442DH0445EE0460DB0461EA0459EA0450HE0455HB0448ED0385EH0448EE0442DA0454DB0446DE0403EA0417AA0461HB0461EH0457EH0416BH0446AE0461EE0385EH0415BA0459AE0446HD0446DE0415BH0456HB0453BB0445EE0446DA0459HE0377EE0391BA0391HD0377EE0379HH0417EE0456DB0456HA0445EE0422BB0456AE0445EB0445AD0446EE0445BE0391DA0453BH0462BD0442HB0379BD0386HD0386EB0385EH0386BE0355DA0446ED0453EH0460ED0446HE0450HH0447EH0377DH0448AB0442EA0454AD0446ED0391AD0425HE0453HE0442EE0444AE0446DA0418AE0445BE0377AA0406ED0406AD0377ED0394EE0395EE0401BD0394ED0398HH0396AE0399ED0401HB0400HB0400EH0402BH0377EH0461DH0449HD0446AE0455EE0355EA0377EE0377EE0377BE0377AE0453BE0456BE0442EA0445BE0460EH0461EB0459DA0450ED0455BE0448HE0385ED0448HD0442AE0454AD0446DH0403EE0417EE0461AB0461HB0457AE0416DE0446EB0461AH0385EB0415EE0459EH0446ED0446EB0415EB0456EE0453ED0445ED0446EE0459HE0377AE0391AH0391EH0377BH0379HE0413DA0442AE0417EE0456BE0456HD0445BE0410AB0450BB0454EH0429AE0459DH0442DE0450BE0455DE0446EB0459HA0391EE0453ED0462AE0442DB0379EE0386EB0386DH0385AE0386EA0355HA0446HD0453AB0460DB0446ED0450DE0447EA0377AH0448AE0442HB0454AE0446HH0391HD0425EE0453DA0442EE0444ED0446DE0418ED0445ED0377DA0406HD0406AE0377DE0402EB0401EB0395BE0398DH0398DA0394EH0398ED0396ED0398ED0399AE0377ED0461AE0449EE0446HE0455HE0355DE0377EE0377HE0377AE0377EE0453AD0456EA0442AE0445AE0460BA0461BB0459DE0450EE0455ED0448AA0385DB0448HH0442DD0454EB0446EA0403EE0417EA0461DE0461AE0457AE0416BD0446AE0461DD0385EH0415AD0459DE0446EB0446DD0415BB0456EE0453DE0445HA0446HD0459EE0377EE0391EB0391ED0377BE0379AB0417DB0456EB0456BD0445BB0412ED0462EB0460HD0461AA0456AH0454HE0460AB0391HH0453AA0462HE0442HH0379HH0386HE0386EH0385AH0386BE0355DH0446EB0453EH0460HE0446HE0450BE0447BH0377EB0448BE0442EB0454EB0446BB0391EE0425HD0453DH0442AH0444HB0446EA0418EA0445HE0377BH0406HD0406BH0377AE0394HD0395BB0400EE0398BB0396DD0394HE0397BB0401DA0394AD0396BD0395EA0377HH0461DE0449HE0446BA0455HE0355EE0377EA0377HD0377EE0377EE0453EH0456AE0442DA0445BH0460EB0461ED0459DE0450DE0455BD0448HE0385AE0448EE0442DE0454BA0446AE0403HB0417EA0461DB0461AB0457AB0416ED0446BD0461EE0385EH0415AB0459AE0446HH0446BA0415BE0456AE0453BB0445AH0446EA0459EA0377EA0391AA0391EA0377BA0379AH0413AH0442DA0412DE0442AA0460EH0450DA0455DH0456EH0391DA0453BB0462EB0442BA0379AE0386HH0386EE0385EH0386AH0355EB0446HH0453AE0460EE0446HA0450BH0447DB0377HH0448EA0442EH0454HH0446DH0391DE0425ED0453DE0442EE0444HE0446DE0418HD0445DH0377DE0406EA0406HA0377BE0395EE0400BH0401BA0401DD0395DA0395AA0402EE0396EE0400EE0399HE0377BH0461AA0449DE0446HB0455ED0355HB0377DD0377AH0377HB0377HA0453BH0456AE0442DB0445HA0460EB0461AE0459EH0450EH0455DH0448AE0385EH0448BE0442DB0454EB0446AB0403BA0417DH0461EE0461BA0457BA0416DE0446HD0461EE0385EA0415EH0459AE0446DE0446EB0415EA0456HE0453AE0445BD0446BD0459AH0377HB0391BD0391DE0377EH0379ED0413BD0442AE0417HH0456DA0456AB0445HA0391EH0453DB0462HD0442EH0379EB0386DD0386BE0385AE0386AD0355DH0446EE0453EE0460DH0446DH0355ED0377DE0377HE0377DH0377HB0453AE0456BE0442DE0445EB0460EE0461HD0459ED0450HB0455EE0448EB0385HE0448HE0442EH0454BD0446BA0403EH0417EA0461EA0461BE0457EA0416DB0446EH0461DA0385DA0415DA0459DA0446HH0446EH0415EH0456DE0453AE0445AH0446HH0459BE0377HE0391HE0391DB0377BB0379EA0417HH0456ED0456BD0445AA0422ED0456BE0445EB0445HB0446EE0445EE0391EH0453HD0462DA0442BD0379HE0386BH0386HE0385ED0386AD0355BE0446AE0455HE0445HA0355HE');local WB=(function(...)local b=(function(...)function c:make_getS(i)local k=i;return function()local l=k;k=nil;return l end end;function h:discharge2reg(as,m,n)self:dischargevars(as,m)local q=m.k;if q=="VNIL"then self:_nil(as,n,1)elseif q=="VFALSE"or q=="VTRUE"then self:codeABC(as,"OP_LOADBOOL",n,m.k=="VTRUE"and 1 or 0,0)elseif q=="VK"then self:codeABx(as,"OP_LOADK",n,m.info)elseif q=="VKNUM"then self:codeABx(as,"OP_LOADK",n,self:numberK(as,m.nval))elseif q=="VRELOCABLE"then local aE=self:getcode(as,m)f:SETARG_A(aE,n)elseif q=="VNONRELOC"then if n~=m.info then self:codeABC(as,"OP_MOVE",n,m.info,0)end else j(m.k=="VVOID"or m.k=="VJMP")return end;m.info=n;m.k="VNONRELOC"end;function h:discharge2anyreg(as,m)if m.k~="VNONRELOC"then self:reserveregs(as,1)self:discharge2reg(as,m,as.freereg-1)end end;function h:exp2reg(as,m,n)self:discharge2reg(as,m,n)if m.k=="VJMP"then m.t=self:concat(as,m.t,m.info)end;if self:hasjumps(m)then local r;local s=self.NO_JUMP;local t=self.NO_JUMP;if self:need_value(as,m.t)or self:need_value(as,m.f)then local u=m.k=="VJMP"and self.NO_JUMP or self:jump(as)s=self:code_label(as,n,0,1)t=self:code_label(as,n,1,0)self:patchtohere(as,u)end;r=self:getlabel(as)self:patchlistaux(as,m.f,r,n,s)self:patchlistaux(as,m.t,r,n,t)end;m.f,m.t=self.NO_JUMP,self.NO_JUMP;m.info=n;m.k="VNONRELOC"end;function h:exp2nextreg(as,m)self:dischargevars(as,m)self:freeexp(as,m)self:reserveregs(as,1)self:exp2reg(as,m,as.freereg-1)end;function h:exp2anyreg(as,m)self:dischargevars(as,m)if m.k=="VNONRELOC"then if not self:hasjumps(m)then return m.info end;if m.info>=as.nactvar then self:exp2reg(as,m,m.info)return m.info end end;self:exp2nextreg(as,m)return m.info end;function h:exp2val(as,m)if self:hasjumps(m)then self:exp2anyreg(as,m)else self:dischargevars(as,m)end end;function h:codenot(as,m)self:dischargevars(as,m)local q=m.k;if q=="VNIL"or q=="VFALSE"then m.k="VTRUE"elseif q=="VK"or q=="VKNUM"or q=="VTRUE"then m.k="VFALSE"elseif q=="VJMP"then self:invertjump(as,m)elseif q=="VRELOCABLE"or q=="VNONRELOC"then self:discharge2anyreg(as,m)self:freeexp(as,m)m.info=self:codeABC(as,"OP_NOT",0,m.info,0)m.k="VRELOCABLE"else j(0)end;m.f,m.t=m.t,m.f;self:removevalues(as,m.f)self:removevalues(as,m.t)end;function h:indexed(as,v,q)v.aux=self:exp2RK(as,q)v.k="VINDEXED"end;function h:constfolding(w,x,y)local z;local A=x.nval;local B=y.nval;if w=="OP_ADD"then z=self:numadd(A,B)elseif w=="OP_SUB"then z=self:numsub(A,B)elseif w=="OP_MUL"then z=self:nummul(A,B)elseif w=="OP_DIV"then if B==0 then return false end;z=self:numdiv(A,B)elseif w=="OP_MOD"then if B==0 then return false end;z=self:nummod(A,B)elseif w=="OP_POW"then z=self:numpow(A,B)elseif w=="OP_UNM"then z=self:numunm(A)elseif w=="OP_LEN"then return false else j(0)z=0 end;if self:numisnan(z)then return false end;x.nval=z;return true end;function h:codearith(as,w,x,y)if self:constfolding(w,x,y)then return else local C=w~="OP_UNM"and w~="OP_LEN"and self:exp2RK(as,y)or 0;local D=self:exp2RK(as,x)x.info=self:codeABC(as,w,0,D,C)x.k="VRELOCABLE"end end;function h:codecomp(as,w,E,x,y)local D=self:exp2RK(as,x)local C=self:exp2RK(as,y)self:freeexp(as,y)self:freeexp(as,x)if E==0 and w~="OP_EQ"then D,C=C,D;E=1 end;x.info=self:condjump(as,w,E,D,C)x.k="VJMP"end;function h:prefix(as,w,m)local y={}y.t,y.f=self.NO_JUMP,self.NO_JUMP;y.k="VKNUM"y.nval=0;if w=="OPR_MINUS"then if not self:isnumeral(m)then self:exp2anyreg(as,m)end;self:codearith(as,"OP_UNM",m,y)elseif w=="OPR_NOT"then self:codenot(as,m)elseif w=="OPR_LEN"then self:exp2anyreg(as,m)self:codearith(as,"OP_LEN",m,y)else j(0)end end;function h:infix(as,w,F)if w=="OPR_AND"then self:goiftrue(as,F)elseif w=="OPR_OR"then self:goiffalse(as,F)elseif w=="OPR_CONCAT"then self:exp2nextreg(as,F)elseif w=="OPR_ADD"or w=="OPR_SUB"or w=="OPR_MUL"or w=="OPR_DIV"or w=="OPR_MOD"or w=="OPR_POW"then if not self:isnumeral(F)then self:exp2RK(as,F)end else self:exp2RK(as,F)end end;h.arith_op={OPR_ADD="OP_ADD",OPR_SUB="OP_SUB",OPR_MUL="OP_MUL",OPR_DIV="OP_DIV",OPR_MOD="OP_MOD",OPR_POW="OP_POW"}h.comp_op={OPR_EQ="OP_EQ",OPR_NE="OP_EQ",OPR_LT="OP_LT",OPR_LE="OP_LE",OPR_GT="OP_LT",OPR_GE="OP_LE"}h.comp_cond={OPR_EQ=1,OPR_NE=0,OPR_LT=1,OPR_LE=1,OPR_GT=0,OPR_GE=0}function h:posfix(as,w,x,y)local function G(x,y)x.k=y.k;x.info=y.info;x.aux=y.aux;x.nval=y.nval;x.t=y.t;x.f=y.f end;if w=="OPR_AND"then j(x.t==self.NO_JUMP)self:dischargevars(as,y)y.f=self:concat(as,y.f,x.f)G(x,y)elseif w=="OPR_OR"then j(x.f==self.NO_JUMP)self:dischargevars(as,y)y.t=self:concat(as,y.t,x.t)G(x,y)elseif w=="OPR_CONCAT"then self:exp2val(as,y)if y.k=="VRELOCABLE"and f:GET_OPCODE(self:getcode(as,y))=="OP_CONCAT"then j(x.info==f:GETARG_B(self:getcode(as,y))-1)self:freeexp(as,x)f:SETARG_B(self:getcode(as,y),x.info)x.k="VRELOCABLE"x.info=y.info else self:exp2nextreg(as,y)self:codearith(as,"OP_CONCAT",x,y)end else local H=self.arith_op[w]if H then self:codearith(as,H,x,y)else local I=self.comp_op[w]if I then self:codecomp(as,I,self.comp_cond[w],x,y)else j(0)end end end end;function h:fixline(as,J)as.f.lineinfo[as.pc-1]=J end;function h:code(as,K,J)return aE end;function h:codeABC(as,L,M,k,N)j(f:getOpMode(L)==f.OpMode.iABC)j(f:getBMode(L)~=f.OpArgMask.OpArgN or k==0)j(f:getCMode(L)~=f.OpArgMask.OpArgN or N==0)return self:code(as,f:CREATE_ABC(L,M,k,N),as.ls.lastline)end;function h:codeABx(as,L,M,O)j(f:getOpMode(L)==f.OpMode.iABx or f:getOpMode(L)==f.OpMode.iAsBx)j(f:getCMode(L)==f.OpArgMask.OpArgN)return self:code(as,f:CREATE_ABx(L,M,O),as.ls.lastline)end;function h:setlist(as,P,Q,R)local N=math.floor((Q-1)/f.LFIELDS_PER_FLUSH)+1;local k=R==d.LUA_MULTRET and 0 or R;j(R~=0)if N<=f.MAXARG_C then self:codeABC(as,"OP_SETLIST",P,k,N)else self:codeABC(as,"OP_SETLIST",P,k,0)self:code(as,f:CREATE_Inst(N),as.ls.lastline)end;as.freereg=P+1 end;d.LUA_QS=e.LUA_QS or"'%s'"d.SHRT_MAX=32767;d.LUAI_MAXVARS=200;d.LUAI_MAXUPVALUES=60;d.MAX_INT=e.MAX_INT or 2147483645;d.LUAI_MAXCCALLS=200;d.VARARG_HASARG=1;d.HASARG_MASK=2;d.VARARG_ISVARARG=2;d.VARARG_NEEDSARG=4;d.LUA_MULTRET=-1;function d:LUA_QL(S)return"'"..S.."'"end;function d:growvector(T,F,Q,U,v,V,m)if Q>=V then error(m)end end;function d:newproto(T)local W={}W.k={}W.sizek=0;W.p={}W.sizep=0;W.code={}W.sizecode=0;W.sizelineinfo=0;W.sizeupvalues=0;W.nups=0;W.upvalues={}W.numparams=0;W.is_vararg=0;W.maxstacksize=0;W.lineinfo={}W.sizelocvars=0;W.locvars={}W.lineDefined=0;W.lastlinedefined=0;W.source=nil;return W end;function d:int2fb(S)local m=0;while S>=16 do S=math.floor((S+1)/2)m=m+1 end;if S<8 then return S else return(m+1)*8+S-8 end end;function d:hasmultret(q)return q=="VCALL"or q=="VVARARG"end;function d:getlocvar(as,K)return as.f.locvars[as.actvar[K]]end;function d:checklimit(as,F,X,Y)if F>X then self:errorlimit(as,X,Y)end end;function d:anchor_token(Z)if Z.t.token=="TK_NAME"or Z.t.token=="TK_STRING"then end end;function d:error_expected(Z,_)e:syntaxerror(Z,string.format(self.LUA_QS.." expected",e:token2str(Z,_)))end;function d:errorlimit(as,V,a0)local a1=as.f.linedefined==0 and string.format("main function has more than %d %s",V,a0)or string.format("function at line %d has more than %d %s",as.f.linedefined,V,a0)e:lexerror(as.ls,a1,0)end;function d:testnext(Z,N)if Z.t.token==N then e:next(Z)return true else return false end end;function d:check(Z,N)if Z.t.token~=N then self:error_expected(Z,N)end end;function d:checknext(Z,N)self:check(Z,N)e:next(Z)end;function d:check_condition(Z,N,a1)if not N then e:syntaxerror(Z,a1)end end;function d:check_match(Z,a0,a2,a3)if not self:testnext(Z,a0)then if a3==Z.linenumber then self:error_expected(Z,a0)else end end end;function d:str_checkname(Z)self:check(Z,"TK_NAME")local a4=Z.t.seminfo;e:next(Z)return a4 end;function d:init_exp(m,q,K)m.f,m.t=h.NO_JUMP,h.NO_JUMP;m.k=q;m.info=K end;function d:codestring(Z,m,a5)self:init_exp(m,"VK",h:stringK(Z.fs,a5))end;function d:checkname(Z,m)self:codestring(Z,m,self:str_checkname(Z))end;function d:registerlocalvar(Z,a6)local as=Z.fs;local W=as.f;self:growvector(Z.L,W.locvars,as.nlocvars,W.sizelocvars,nil,self.SHRT_MAX,"too many local variables")W.locvars[as.nlocvars]={}W.locvars[as.nlocvars].varname=a6;local a7=as.nlocvars;as.nlocvars=as.nlocvars+1;return a7 end;function d:new_localvarliteral(Z,F,a8)self:new_localvar(Z,F,a8)end;function d:new_localvar(Z,a9,a8)local as=Z.fs;self:checklimit(as,as.nactvar+a8+1,self.LUAI_MAXVARS,"local variables")as.actvar[as.nactvar+a8]=self:registerlocalvar(Z,a9)end;function d:adjustlocalvars(Z,aa)local as=Z.fs;as.nactvar=as.nactvar+aa;for K=aa,1,-1 do self:getlocvar(as,as.nactvar-K).startpc=as.pc end end;function d:removevars(Z,ab)local as=Z.fs;while as.nactvar>ab do as.nactvar=as.nactvar-1;self:getlocvar(as,as.nactvar).endpc=as.pc end end;function d:indexupvalue(as,a9,F)local W=as.f;for K=0,W.nups-1 do if as.upvalues[K].k==F.k and as.upvalues[K].info==F.info then j(W.upvalues[K]==a9)return K end end;self:checklimit(as,W.nups+1,self.LUAI_MAXUPVALUES,"upvalues")self:growvector(as.L,W.upvalues,W.nups,W.sizeupvalues,nil,self.MAX_INT,"")W.upvalues[W.nups]=a9;j(F.k=="VLOCAL"or F.k=="VUPVAL")as.upvalues[W.nups]={k=F.k,info=F.info}local ac=W.nups;W.nups=W.nups+1;return ac end;function d:searchvar(as,a8)for K=as.nactvar-1,0,-1 do if a8==self:getlocvar(as,K).varname then return K end end;return-1 end;function d:markupval(as,ad)local ae=as.bl;while ae and ae.nactvar>ad do ae=ae.previous end;if ae then ae.upval=true end end;function d:singlevaraux(as,a8,af,P)if as==nil then self:init_exp(af,"VGLOBAL",f.NO_REG)return"VGLOBAL"else local F=self:searchvar(as,a8)if F>=0 then self:init_exp(af,"VLOCAL",F)if P==0 then self:markupval(as,F)end;return"VLOCAL"else af.info=self:indexupvalue(as,a8,af)af.k="VUPVAL"return"VUPVAL"end end end;function d:singlevar(Z,af)local a6=self:str_checkname(Z)local as=Z.fs;if self:singlevaraux(as,a6,af,1)=="VGLOBAL"then af.info=h:stringK(as,a6)end end;function d:adjust_assign(Z,aa,ag,m)local as=Z.fs;local ah=aa-ag;if self:hasmultret(m.k)then ah=ah+1;if ah<=0 then ah=0 end;h:setreturns(as,m,ah)if ah>1 then h:reserveregs(as,ah-1)end else if m.k~="VVOID"then h:exp2nextreg(as,m)end;if ah>0 then local n=as.freereg;h:reserveregs(as,ah)h:_nil(as,n,ah)end end end;function d:enterlevel(Z)Z.L.nCcalls=Z.L.nCcalls+1;if Z.L.nCcalls>self.LUAI_MAXCCALLS then e:lexerror(Z,"chunk has too many syntax levels",0)end end;function d:leavelevel(Z)Z.L.nCcalls=Z.L.nCcalls-1 end;function d:enterblock(as,ae,ai)ae.breaklist=h.NO_JUMP;ae.isbreakable=ai;ae.nactvar=as.nactvar;ae.upval=false;ae.previous=as.bl;as.bl=ae;j(as.freereg==as.nactvar)end;function d:leaveblock(as)local ae=as.bl;as.bl=ae.previous;self:removevars(as.ls,ae.nactvar)if ae.upval then h:codeABC(as,"OP_CLOSE",ae.nactvar,0,0)end;j(not ae.isbreakable or not ae.upval)j(ae.nactvar==as.nactvar)as.freereg=as.nactvar;h:patchtohere(as,ae.breaklist)end;function d:pushclosure(Z,aj,F)local as=Z.fs;local W=as.f;self:growvector(Z.L,W.p,as.np,W.sizep,nil,f.MAXARG_Bx,"constant table overflow")W.p[as.np]=aj.f;as.np=as.np+1;self:init_exp(F,"VRELOCABLE",h:codeABx(as,"OP_CLOSURE",0,as.np-1))for K=0,aj.f.nups-1 do local L=aj.upvalues[K].k=="VLOCAL"and"OP_MOVE"or"OP_GETUPVAL"h:codeABC(as,L,0,aj.upvalues[K].info,0)end end;function d:open_func(Z,as)local T=Z.L;local W=self:newproto(Z.L)as.f=W;as.prev=Z.fs;as.ls=Z;as.L=T;Z.fs=as;as.pc=0;as.lasttarget=-1;as.jpc=h.NO_JUMP;as.freereg=0;as.nk=0;as.np=0;as.nlocvars=0;as.nactvar=0;as.bl=nil;W.source=Z.source;W.maxstacksize=2;as.h={}end;function d:close_func(Z)local T=Z.L;local as=Z.fs;local W=as.f;self:removevars(Z,0)h:ret(as,0,0)W.sizecode=as.pc;W.sizelineinfo=as.pc;W.sizek=as.nk;W.sizep=as.np;W.sizelocvars=as.nlocvars;W.sizeupvalues=W.nups;j(as.bl==nil)Z.fs=as.prev;if as then self:anchor_token(Z)end end;function d:parser(T,ak,i,a9)local al={}al.t={}al.lookahead={}local am={}am.upvalues={}am.actvar={}T.nCcalls=0;al.buff=i;e:setinput(T,al,ak,a9)self:open_func(al,am)am.f.is_vararg=self.VARARG_ISVARARG;e:next(al)self:chunk(al)self:check(al,"TK_EOS")self:close_func(al)j(am.prev==nil)j(am.f.nups==0)j(al.fs==nil)return am.f end;function d:field(Z,F)local as=Z.fs;local an={}h:exp2anyreg(as,F)e:next(Z)self:checkname(Z,an)h:indexed(as,F,an)end;function d:yindex(Z,F)e:next(Z)self:expr(Z,F)h:exp2val(Z.fs,F)self:checknext(Z,"]")end;function d:recfield(Z,ao)local as=Z.fs;local n=Z.fs.freereg;local an,ap={},{}if Z.t.token=="TK_NAME"then self:checklimit(as,ao.nh,self.MAX_INT,"items in a constructor")self:checkname(Z,an)else self:yindex(Z,an)end;ao.nh=ao.nh+1;self:checknext(Z,"=")local aq=h:exp2RK(as,an)self:expr(Z,ap)h:codeABC(as,"OP_SETTABLE",ao.t.info,aq,h:exp2RK(as,ap))as.freereg=n end;function d:closelistfield(as,ao)if ao.v.k=="VVOID"then return end;h:exp2nextreg(as,ao.v)ao.v.k="VVOID"if ao.tostore==f.LFIELDS_PER_FLUSH then h:setlist(as,ao.t.info,ao.na,ao.tostore)ao.tostore=0 end end;function d:lastlistfield(as,ao)if ao.tostore==0 then return end;if self:hasmultret(ao.v.k)then h:setmultret(as,ao.v)h:setlist(as,ao.t.info,ao.na,self.LUA_MULTRET)ao.na=ao.na-1 else if ao.v.k~="VVOID"then h:exp2nextreg(as,ao.v)end;h:setlist(as,ao.t.info,ao.na,ao.tostore)end end;function d:listfield(Z,ao)self:expr(Z,ao.v)self:checklimit(Z.fs,ao.na,self.MAX_INT,"items in a constructor")ao.na=ao.na+1;ao.tostore=ao.tostore+1 end;function d:constructor(Z,v)local as=Z.fs;local J=Z.linenumber;local aE=h:codeABC(as,"OP_NEWTABLE",0,0,0)local ao={}ao.v={}ao.na,ao.nh,ao.tostore=0,0,0;ao.t=v;self:init_exp(v,"VRELOCABLE",aE)self:init_exp(ao.v,"VVOID",0)h:exp2nextreg(Z.fs,v)self:checknext(Z,"{")repeat j(ao.v.k=="VVOID"or ao.tostore>0)if Z.t.token=="}"then break end;self:closelistfield(as,ao)local N=Z.t.token;if N=="TK_NAME"then e:lookahead(Z)if Z.lookahead.token~="="then self:listfield(Z,ao)else self:recfield(Z,ao)end elseif N=="["then self:recfield(Z,ao)else self:listfield(Z,ao)end until not self:testnext(Z,",")and not self:testnext(Z,";")self:check_match(Z,"}","{",J)self:lastlistfield(as,ao)f:SETARG_B(as.f.code[aE],self:int2fb(ao.na))f:SETARG_C(as.f.code[aE],self:int2fb(ao.nh))end;function d:parlist(Z)local as=Z.fs;local W=as.f;local ar=0;W.is_vararg=0;if Z.t.token~=")"then repeat local N=Z.t.token;if N=="TK_NAME"then self:new_localvar(Z,self:str_checkname(Z),ar)ar=ar+1 elseif N=="TK_DOTS"then e:next(Z)self:new_localvarliteral(Z,"arg",ar)ar=ar+1;W.is_vararg=self.VARARG_HASARG+self.VARARG_NEEDSARG;W.is_vararg=W.is_vararg+self.VARARG_ISVARARG else e:syntaxerror(Z,"<name> or "..self:LUA_QL("...").." expected")end until W.is_vararg~=0 or not self:testnext(Z,",")end;self:adjustlocalvars(Z,ar)W.numparams=as.nactvar-W.is_vararg%self.HASARG_MASK;h:reserveregs(as,as.nactvar)end;function d:body(Z,m,at,J)local au={}au.upvalues={}au.actvar={}self:open_func(Z,au)au.f.lineDefined=J;self:checknext(Z,"(")if at then self:new_localvarliteral(Z,"self",0)self:adjustlocalvars(Z,1)end;self:parlist(Z)self:checknext(Z,")")self:chunk(Z)au.f.lastlinedefined=Z.linenumber;self:check_match(Z,"TK_END","TK_FUNCTION",J)self:close_func(Z)self:pushclosure(Z,au,m)end;function d:explist1(Z,F)local a8=1;self:expr(Z,F)while self:testnext(Z,",")do h:exp2nextreg(Z.fs,F)self:expr(Z,F)a8=a8+1 end;return a8 end;function d:funcargs(Z,W)local as=Z.fs;local av={}local ar;local J=Z.linenumber;local N=Z.t.token;if N=="("then if J~=Z.lastline then e:syntaxerror(Z,"ambiguous syntax (function call x new statement)")end;e:next(Z)if Z.t.token==")"then av.k="VVOID"else self:explist1(Z,av)h:setmultret(as,av)end;self:check_match(Z,")","(",J)elseif N=="{"then self:constructor(Z,av)elseif N=="TK_STRING"then self:codestring(Z,av,Z.t.seminfo)e:next(Z)else e:syntaxerror(Z,"function arguments expected")return end;j(W.k=="VNONRELOC")local P=W.info;if self:hasmultret(av.k)then ar=self.LUA_MULTRET else if av.k~="VVOID"then h:exp2nextreg(as,av)end;ar=as.freereg-(P+1)end;self:init_exp(W,"VCALL",h:codeABC(as,"OP_CALL",P,ar+1,2))h:fixline(as,J)as.freereg=P+1 end;function d:expr(Z,F)self:subexpr(Z,F,0)end;function d:block_follow(_)if _=="TK_ELSE"or _=="TK_ELSEIF"or _=="TK_END"or _=="TK_UNTIL"or _=="TK_EOS"then return true else return false end end;function d:block(Z)local as=Z.fs;local ae={}self:enterblock(as,ae,false)self:chunk(Z)j(ae.breaklist==h.NO_JUMP)self:leaveblock(as)end;function d:statement(Z)local J=Z.linenumber;local N=Z.t.token;if N=="TK_IF"then self:ifstat(Z,J)return false elseif N=="TK_WHILE"then self:whilestat(Z,J)return false elseif N=="TK_DO"then e:next(Z)self:block(Z)self:check_match(Z,"TK_END","TK_DO",J)return false elseif N=="TK_FOR"then self:forstat(Z,J)return false elseif N=="TK_REPEAT"then self:repeatstat(Z,J)return false elseif N=="TK_FUNCTION"then self:funcstat(Z,J)return false elseif N=="TK_LOCAL"then e:next(Z)if self:testnext(Z,"TK_FUNCTION")then self:localfunc(Z)else self:localstat(Z)end;return false elseif N=="TK_RETURN"then self:retstat(Z)return true elseif N=="TK_BREAK"then e:next(Z)self:breakstat(Z)return true else self:exprstat(Z)return false end end;function d:chunk(Z)local aw=false;self:enterlevel(Z)while not aw and not self:block_follow(Z.t.token)do aw=self:statement(Z)self:testnext(Z,";")j(Z.fs.f.maxstacksize>=Z.fs.freereg and Z.fs.freereg>=Z.fs.nactvar)Z.fs.freereg=Z.fs.nactvar end;self:leavelevel(Z)end;e:init()local ax={}return function(o,a9)a9=a9 or"compiled-lua"local ay=c:init(c:make_getF(o),nil)if not ay then return end;local aj=d:parser(ax,ay,nil,"@"..a9)local az,i=g:make_setS()g:dump(ax,aj,az,i)return i.data end end)()local aA=(function(...)local aB=nil;if not table.create then function table.create(c)return{}end end;if not table.unpack then table.unpack=unpack end;if not table.pack then function table.pack(...)return{n=select("#",...),...}end end;if not table.move then function table.move(d,e,f,g,h)for aC=0,f-e do h[g+aC]=d[e+aC]end end end;local j;local aD;local i;local k=50;local l={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local function aF(d,aG,ak,a8)local aH=0;for aC=aG,ak,a8 do local aI=256^math.abs(aC-aG)aH=aH+aI*string.byte(d,aC,aC)end;return aH end;local function aJ(F,aK,S,aL)local aM=(-1)^aB.rshift(aL,7)local aN=aB.rshift(S,7)+aB.lshift(aB.band(aL,0x7F),1)local aO=F+aB.lshift(aK,8)+aB.lshift(aB.band(S,0x7F),16)local aP=1;if aN==0 then if aO==0 then return aM*0 else aP=0;aN=1 end elseif aN==0x7F then if aO==0 then return aM*1/0 else return aM*0/0 end end;return aM*2^(aN-127)*(1+aP/2^23)end;local function X(F,aK,S,aL,aQ,Z,_,a1)local aM=(-1)^aB.rshift(a1,7)local aN=aB.lshift(aB.band(a1,0x7F),4)+aB.rshift(_,4)local aO=aB.band(_,0x0F)*2^48;local aP=1;aO=aO+Z*2^40+aQ*2^32+aL*2^24+S*2^16+aK*2^8+F;if aN==0 then if aO==0 then return aM*0 else aP=0;aN=1 end elseif aN==0x7FF then if aO==0 then return aM*1/0 else return aM*0/0 end end;return aM*2^(aN-1023)*(aP+aO/2^52)end;local function aR(d,aG,ak)return aF(d,aG,ak-1,1)end;local function aS(d,aG,ak)return aF(d,ak-1,aG,-1)end;local function T(d,aG)return aJ(string.byte(d,aG,aG+3))end;local function aT(d,aG)local F,aK,S,aL=string.byte(d,aG,aG+3)return aJ(aL,S,aK,F)end;local function N(d,aG)return X(string.byte(d,aG,aG+7))end;local function a5(d,aG)local F,aK,S,aL,aQ,Z,_,a1=string.byte(d,aG,aG+7)return X(a1,_,Z,aQ,aL,S,aK,F)end;local aU={[4]={little=T,big=aT},[8]={little=N,big=a5}}local function aV(aW)local aX=aW.index;local aY=string.byte(aW.source,aX,aX)aW.index=aX+1;return aY end;local function aZ(aW,a_)local b0=aW.index+a_;local b1=string.sub(aW.source,aW.index,b0-1)aW.index=b0;return b1 end;local function K(aW)local a_=aW:s_szt()local b1;if a_~=0 then b1=string.sub(aZ(aW,a_),1,-2)end;return b1 end;local function a4(a_,L)return function(aW)local b0=aW.index+a_;local b2=L(aW.source,aW.index,b0)aW.index=b0;return b2 end end;local function M(a_,L)return function(aW)local O=L(aW.source,aW.index)aW.index=aW.index+a_;return O end end;local function b3(aW)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do local b5=aW:s_ins()local b6=aB.band(b5,0x3F)local b7=o[b6]local b8=p[b6]local w={value=b5,op=l[b6],A=aB.band(aB.rshift(b5,6),0xFF)}if b7=="ABC"then w.B=aB.band(aB.rshift(b5,23),0x1FF)w.C=aB.band(aB.rshift(b5,14),0x1FF)w.is_KB=b8.b=="OpArgK"and w.B>0xFF;w.is_KC=b8.c=="OpArgK"and w.C>0xFF elseif b7=="ABx"then w.Bx=aB.band(aB.rshift(b5,14),0x3FFFF)w.is_K=b8.b=="OpArgK"elseif b7=="AsBx"then w.sBx=aB.band(aB.rshift(b5,14),0x3FFFF)-131071 end;b4[aC]=w end;return b4 end;local function b9(aW)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do local z=aV(aW)local Y;if z==1 then Y=aV(aW)~=0 elseif z==3 then Y=aW:s_num()elseif z==4 then Y=K(aW)end;b4[aC]=Y end;return b4 end;local function v(aW,d)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do b4[aC]=i(aW,d)end;return b4 end;local function az(aW)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do b4[aC]=aW:s_int()end;return b4 end;local function ba(aW)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do b4[aC]={varname=K(aW),startpc=aW:s_int(),endpc=aW:s_int()}end;return b4 end;local function bb(aW)local a_=aW:s_int()local b4=table.create(a_)for aC=1,a_ do b4[aC]=K(aW)end;return b4 end;function i(aW,bc)local bd={}local d=K(aW)or bc;bd.source=d;aW:s_int()aW:s_int()bd.num_upval=aV(aW)bd.num_param=aV(aW)aV(aW)bd.max_stack=aV(aW)bd.code=b3(aW)bd.const=b9(aW)bd.subs=v(aW,d)bd.lines=az(aW)ba(aW)bb(aW)for c,be in ipairs(bd.code)do if be.is_K then be.const=bd.const[be.Bx+1]else if be.is_KB then be.const_B=bd.const[be.B-0xFF]end;if be.is_KC then be.const_C=bd.const[be.C-0xFF]end end end;return bd end;function j(d)local bf;local bg;local bh;local W;local bi;local bj;local bk;if bk then as.s_num=a4(bj,bf)elseif aU[bj]then as.s_num=M(bj,aU[bj][bg and"little"or"big"])end;return i(as,"")end;local function m(b4,bl)for aC,bm in pairs(b4)do if bm.index>=bl then bm.value=bm.store[bm.index]bm.store=bm;bm.index=""b4[aC]=nil end end end;local function bn(b4,bl,bo)local bp=b4[bl]if not bp then bp={index=bl,store=bo}b4[bl]=bp end;return bp end;local function bq(br,bs)local d=br.source;local bt=br.lines[br.pc-1]error(string.format("%s:%i: %s",d,bt,bs),0)end;local function bu(aE,bv,bw)local bx=aE.code;local by=aE.subs;local bz=aE.vararg;local bA=-1;local bB={}local bo=aE.memory;local n=aE.pc;while true do local bC=bx[n]local b6=bC.op;n=n+1;if b6<18 then if b6<8 then if b6<3 then if b6<1 then for aC=bC.A,bC.B do bo[aC]=nil end elseif b6>1 then local bm=bw[bC.B]bo[bC.A]=bm.store[bm.index]else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD+bE end elseif b6>3 then if b6<6 then if b6>4 then local bF=bC.A;local bG=bC.B;local bl;if bC.is_KC then bl=bC.const_C else bl=bo[bC.C]end;bo[bF+1]=bo[bG]bo[bF]=bo[bG][bl]else bo[bC.A]=bv[bC.const]end elseif b6>6 then local bl;if bC.is_KC then bl=bC.const_C else bl=bo[bC.C]end;bo[bC.A]=bo[bC.B][bl]else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD-bE end else bo[bC.A]=bo[bC.B]end elseif b6>8 then if b6<13 then if b6<10 then bv[bC.const]=bo[bC.A]elseif b6>10 then if b6<12 then local bF=bC.A;local bG=bC.B;local bH=bC.C;local bI;if bG==0 then bI=bA-bF else bI=bG-1 end;local q=table.pack(bo[bF](table.unpack(bo,bF+1,bF+bI)))local bJ=q.n;if bH==0 then bA=bF+bJ-1 else bJ=bH-1 end;table.move(q,1,bJ,bF,bo)else local bm=bw[bC.B]bm.store[bm.index]=bo[bC.A]end else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD*bE end elseif b6>13 then if b6<16 then if b6>14 then local bF=bC.A;local bG=bC.B;local bI;if bG==0 then bI=bA-bF else bI=bG-1 end;m(bB,0)return bo[bF](table.unpack(bo,bF+1,bF+bI))else local bl,bK;if bC.is_KB then bl=bC.const_B else bl=bo[bC.B]end;if bC.is_KC then bK=bC.const_C else bK=bo[bC.C]end;bo[bC.A][bl]=bK end elseif b6>16 then bo[bC.A]={}else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD/bE end else bo[bC.A]=bC.const end else local bF=bC.A;local bL=bo[bF+2]local bl=bo[bF]+bL;local bM=bo[bF+1]local r;if bL==math.abs(bL)then r=bl<=bM else r=bl>=bM end;if r then bo[bC.A]=bl;bo[bC.A+3]=bl;n=n+bC.sBx end end elseif b6>18 then if b6<28 then if b6<23 then if b6<20 then bo[bC.A]=#bo[bC.B]elseif b6>20 then if b6<22 then local bF=bC.A;local bG=bC.B;local a_;if bG==0 then a_=bA-bF+1 else a_=bG-1 end;m(bB,0)return table.unpack(bo,bF,bF+a_-1)else local b1=bo[bC.B]for aC=bC.B+1,bC.C do b1=b1 ..bo[aC]end;bo[bC.A]=b1 end else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD%bE end elseif b6>23 then if b6<26 then if b6>24 then m(bB,bC.A)else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;if bD==bE==(bC.A~=0)then n=n+bx[n].sBx end;n=n+1 end elseif b6>26 then local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;if bD<bE==(bC.A~=0)then n=n+bx[n].sBx end;n=n+1 else local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;bo[bC.A]=bD^bE end else bo[bC.A]=bC.B~=0;if bC.C~=0 then n=n+1 end end elseif b6>28 then if b6<33 then if b6<30 then local bD,bE;if bC.is_KB then bD=bC.const_B else bD=bo[bC.B]end;if bC.is_KC then bE=bC.const_C else bE=bo[bC.C]end;if bD<=bE==(bC.A~=0)then n=n+bx[n].sBx end;n=n+1 elseif b6>30 then if b6<32 then local s=by[bC.Bx+1]local t=s.num_upval;local u;if t~=0 then u={}for aC=1,t do local af=bx[n+aC-1]if af.op==l[0]then u[aC-1]=bn(bB,af.B,bo)elseif af.op==l[4]then u[aC-1]=bw[af.B]end end;n=n+t end;bo[bC.A]=aD(s,bv,u)else local bF=bC.A;local bG=bC.B;if not bo[bG]~=(bC.C~=0)then bo[bF]=bo[bG]n=n+bx[n].sBx end;n=n+1 end else bo[bC.A]=-bo[bC.B]end elseif b6>33 then if b6<36 then if b6>34 then local bF=bC.A;local a_=bC.B;if a_==0 then a_=bz.len;bA=bF+a_-1 end;table.move(bz.list,1,a_,bF,bo)else local bF=bC.A;local bN,bM,bL;bN=assert(tonumber(bo[bF]),"`for` initial value must be a number")bM=assert(tonumber(bo[bF+1]),"`for` limit must be a number")bL=assert(tonumber(bo[bF+2]),"`for` step must be a number")bo[bF]=bN-bL;bo[bF+1]=bM;bo[bF+2]=bL;n=n+bC.sBx end elseif b6>36 then local bF=bC.A;local bH=bC.C;local a_=bC.B;local an=bo[bF]local g;if a_==0 then a_=bA-bF end;if bH==0 then bH=bC[n].value;n=n+1 end;g=(bH-1)*k;table.move(bo,bF+1,bF+a_,g+1,an)else bo[bC.A]=not bo[bC.B]end else if not bo[bC.A]~=(bC.C~=0)then n=n+bx[n].sBx end;n=n+1 end else local bF=bC.A;local aj=bF+3;local E={bo[bF](bo[bF+1],bo[bF+2])}table.move(E,1,bC.C,aj,bo)if bo[aj]~=nil then bo[bF+2]=bo[aj]n=n+bx[n].sBx end;n=n+1 end else n=n+bC.sBx end;aE.pc=n end end;function aD(bd,bv,bO)local function x(...)local y=table.pack(...)local bo=table.create(bd.max_stack)local bz={len=0,list={}}table.move(y,1,bd.num_param,0,bo)if bd.num_param<y.n then local A=bd.num_param+1;local a_=y.n-bd.num_param;bz.len=a_;table.move(y,A,A+a_-1,1,bz.list)end;local aE={vararg=bz,memory=bo,code=bd.code,subs=bd.subs,pc=1}local B=table.pack(pcall(bu,aE,bv,bO))if B[1]then return table.unpack(B,2,B.n)else local br={pc=aE.pc,source=bd.source,lines=bd.lines}bq(br,B[2])return end end;return x end;return function(C,bv)return aD(j(C),bv or getfenv(0))end end)()getfenv().script=nil;return function(bP,bQ)local bR;local bQ=bQ or getfenv(2)local a9=bQ.script and bQ.script:GetFullName()local bS,bT=pcall(function()local bU=b(bP,a9)bR=aA(bU,bQ)end)if bS then return setfenv(bR,bQ)end;return nil,bT end end);gB = pB(gB,lG('0391BA0391AA0403AE0403EB0429BE0459DH0450HD0457BD0377EB0417ED0462HH0443HB0377AE0424DD0443HH0447AE0462EE0460EE0444AH0442EA0461BA0456AB0459AB0377BA0463AB0401DE0377BD0414DE0453HE0450EA0461AA0446ED0403EB0403DE0391EE0391BE'), '');local a,qA,ss='ABC',gB,WB;if n==(0x001) then return else DI={0x1,lG(gB),0x3,1,2,'0453EA0456AE0442HE0445ED0460ED0461AE0459DE0450BD0455HA0448EE'};ss=iE[lG(DI[0x06])];if WB== (0x2) then gB=DI[0x1];qA=NZ else local sU,TV,gx=iE,uC,lG;end;local DI=ss(DI[0x5-3+0x00]);WB=b;NZ=b;uC=b;bU=b;CI=B;DI();gB=(zm);qA=(Zb);ss=(NJ);if WB== (0x2) then gB=DI[0x1];qA=NZ else local sU,TV,gx=iE,uC,lG;end;qA,gB,WB=(BD),(Bl);end;if WB== (0x2) then gB=DI[0x1];qA=NZ else local sU,TV,gx=iE,uC,lG;end;end)()	
